{"ast":null,"code":"import _defineProperty from \"/Users/marleykanui/Desktop/valentines/valentines-card/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Redux Toolkit\nimport { createSlice, createAction } from '@reduxjs/toolkit'; // Next Redux Wrapper\n\nimport { HYDRATE } from 'next-redux-wrapper'; // Redux Types\n\nvar hydrate = createAction(HYDRATE);\nvar MenuTransition = createSlice({\n  name: 'MenuTransition',\n  initialState: {\n    transition: false\n  },\n  reducers: {\n    enterMenu: function enterMenu(state, action) {\n      var transition = action.payload.transition;\n      state.transition = transition;\n    },\n    exitMenu: function exitMenu(state, action) {\n      var transition = action.payload.transition;\n      state.transition = transition;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(hydrate, function (state, action) {\n      console.log('HYDRATE', state, action.payload);\n      return _objectSpread(_objectSpread({}, state), action.payload[MenuTransition.name]);\n    });\n  }\n});\nvar _MenuTransition$actio = MenuTransition.actions,\n    enterMenu = _MenuTransition$actio.enterMenu,\n    exitMenu = _MenuTransition$actio.exitMenu;\nexport { enterMenu, exitMenu };\nexport default MenuTransition;","map":{"version":3,"sources":["/Users/marleykanui/Desktop/valentines/valentines-card/redux/slices/MenuTransitionSlice.tsx"],"names":["createSlice","createAction","HYDRATE","hydrate","MenuTransition","name","initialState","transition","reducers","enterMenu","state","action","payload","exitMenu","extraReducers","builder","addCase","console","log","actions"],"mappings":";;;;;;AAAA;AACA,SAASA,WAAT,EAAqCC,YAArC,QAAyD,kBAAzD,C,CAEA;;AACA,SAASC,OAAT,QAAwB,oBAAxB,C,CAEA;;AAQA,IAAMC,OAAO,GAAGF,YAAY,CAAWC,OAAX,CAA5B;AAEA,IAAME,cAAc,GAAGJ,WAAW,CAAC;AACjCK,EAAAA,IAAI,EAAE,gBAD2B;AAEjCC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAFmB;AAGjCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,mBAACC,KAAD,EAAQC,MAAR,EAAuD;AAAA,UACxDJ,UADwD,GACzCI,MAAM,CAACC,OADkC,CACxDL,UADwD;AAEhEG,MAAAA,KAAK,CAACH,UAAN,GAAmBA,UAAnB;AACD,KAJO;AAKRM,IAAAA,QAAQ,EAAE,kBAACH,KAAD,EAAQC,MAAR,EAAuD;AAAA,UACvDJ,UADuD,GACxCI,MAAM,CAACC,OADiC,CACvDL,UADuD;AAE/DG,MAAAA,KAAK,CAACH,UAAN,GAAmBA,UAAnB;AACD;AARO,GAHuB;AAajCO,EAAAA,aAbiC,yBAanBC,OAbmB,EAaV;AACrBA,IAAAA,OAAO,CAACC,OAAR,CAAgBb,OAAhB,EAAyB,UAACO,KAAD,EAAQC,MAAR,EAAmB;AAC1CM,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,KAAvB,EAA8BC,MAAM,CAACC,OAArC;AACA,6CACKF,KADL,GAEKC,MAAM,CAACC,OAAP,CAAeR,cAAc,CAACC,IAA9B,CAFL;AAID,KAND;AAOD;AArBgC,CAAD,CAAlC;4BAwBuCD,cAAc,CAACe,O;IAAvCV,S,yBAAAA,S;IAAWI,Q,yBAAAA,Q;;AAE1B,eAAeT,cAAf","sourcesContent":["// Redux Toolkit\nimport { createSlice, PayloadAction, createAction } from '@reduxjs/toolkit';\n\n// Next Redux Wrapper\nimport { HYDRATE } from 'next-redux-wrapper';\n\n// Redux Types\nimport { AppState } from '../store';\n\n// Types\ninterface MenuTransitionProps {\n  transition: boolean;\n}\n\nconst hydrate = createAction<AppState>(HYDRATE);\n\nconst MenuTransition = createSlice({\n  name: 'MenuTransition',\n  initialState: { transition: false } as MenuTransitionProps,\n  reducers: {\n    enterMenu: (state, action: PayloadAction<MenuTransitionProps>) => {\n      const { transition } = action.payload;\n      state.transition = transition;\n    },\n    exitMenu: (state, action: PayloadAction<MenuTransitionProps>) => {\n      const { transition } = action.payload;\n      state.transition = transition;\n    },\n  },\n  extraReducers(builder) {\n    builder.addCase(hydrate, (state, action) => {\n      console.log('HYDRATE', state, action.payload);\n      return {\n        ...state,\n        ...action.payload[MenuTransition.name],\n      };\n    });\n  },\n});\n\nexport const { enterMenu, exitMenu } = MenuTransition.actions;\n\nexport default MenuTransition;\n"]},"metadata":{},"sourceType":"module"}