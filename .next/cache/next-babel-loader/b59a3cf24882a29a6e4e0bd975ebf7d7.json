{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marleykanui/Desktop/valentines/valentines-card/components/0-navigation/0-menu/3-objects/MenuOption.tsx\";\n// React\nimport { useState, useEffect, useMemo } from 'react'; // Next\n\nimport Router from 'next/router'; // Three\n\nimport { TextureLoader } from 'three'; // React Spring\n\nimport { useSpring, a } from 'react-spring/three'; // React Types\n\nconst MenuOption = ({\n  link,\n  name,\n  imgFront,\n  imgBack,\n  imgLabel,\n  ripScale,\n  labelScale,\n  ripPosition,\n  labelPosition,\n  frontRotation,\n  backRotation,\n  setOrbitSpeed,\n  toggleClick,\n  handleTransition,\n  clicked\n}) => {\n  useEffect(() => {\n    Router.prefetch(`/baklavegan/${link}`);\n  }, [link]);\n  const {\n    0: menuRipFront,\n    1: menuRipBack,\n    2: menuRipLabel\n  } = useMemo(() => {\n    const loader = new TextureLoader();\n    return [loader.load(imgFront), loader.load(imgBack), loader.load(imgLabel)];\n  }, [imgFront, imgBack, imgLabel]);\n  const {\n    0: scaleState,\n    1: setScaleState\n  } = useState(false);\n  const {\n    0: pushed,\n    1: setPushed\n  } = useState(false);\n\n  const handlePointerDown = e => {\n    e.stopPropagation();\n    setPushed(true);\n  };\n\n  const handlePointerUp = e => {\n    setPushed(false);\n    handleTransition();\n\n    if (clicked) {\n      Router.push(`/baklavegan/${link}`);\n      setTimeout(() => {\n        toggleClick();\n      }, 100);\n    }\n  };\n\n  const {\n    push\n  } = useSpring({\n    config: {\n      friction: 15\n    },\n    push: pushed ? [1, 1, 1] : [1.08, 1.08, 1.08]\n  });\n\n  const handleHover = (e, cursor) => {\n    e.stopPropagation();\n    setScaleState(!scaleState);\n\n    if (cursor) {\n      setOrbitSpeed(0);\n      document.body.style.cursor = 'pointer';\n    } else {\n      setOrbitSpeed(-1.6);\n      document.body.style.cursor = 'default';\n    }\n  };\n\n  const {\n    scale\n  } = useSpring({\n    config: {\n      friction: 15\n    },\n    scale: scaleState ? [1.08, 1.08, 1.08] : [1, 1, 1]\n  });\n  return /*#__PURE__*/_jsxDEV(a.group, {\n    scale: scale,\n    children: /*#__PURE__*/_jsxDEV(a.group, {\n      scale: push,\n      children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n        position: ripPosition,\n        rotation: backRotation,\n        renderOrder: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n          args: ripScale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          transparent: true,\n          children: /*#__PURE__*/_jsxDEV(\"primitive\", {\n            attach: \"map\",\n            object: menuRipBack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        name: name,\n        position: ripPosition,\n        rotation: frontRotation,\n        renderOrder: 2,\n        children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n          args: ripScale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          transparent: true,\n          children: /*#__PURE__*/_jsxDEV(\"primitive\", {\n            attach: \"map\",\n            object: menuRipFront\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        position: labelPosition,\n        rotation: frontRotation,\n        onPointerDown: e => handlePointerDown(e),\n        onPointerUp: e => handlePointerUp(e),\n        onPointerOver: e => handleHover(e, true),\n        onPointerOut: e => handleHover(e, false),\n        renderOrder: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n          args: labelScale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          transparent: true,\n          children: /*#__PURE__*/_jsxDEV(\"primitive\", {\n            attach: \"map\",\n            object: menuRipLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\nexport default MenuOption;","map":{"version":3,"sources":["/Users/marleykanui/Desktop/valentines/valentines-card/components/0-navigation/0-menu/3-objects/MenuOption.tsx"],"names":["useState","useEffect","useMemo","Router","TextureLoader","useSpring","a","MenuOption","link","name","imgFront","imgBack","imgLabel","ripScale","labelScale","ripPosition","labelPosition","frontRotation","backRotation","setOrbitSpeed","toggleClick","handleTransition","clicked","prefetch","menuRipFront","menuRipBack","menuRipLabel","loader","load","scaleState","setScaleState","pushed","setPushed","handlePointerDown","e","stopPropagation","handlePointerUp","push","setTimeout","config","friction","handleHover","cursor","document","body","style","scale"],"mappings":"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","sourcesContent":["// React\nimport { useState, useEffect, useMemo } from 'react';\n\n// Next\nimport Router from 'next/router';\n\n// Three\nimport { TextureLoader } from 'three';\n\n// React Spring\nimport { useSpring, a } from 'react-spring/three';\n\n// React Types\nimport { FC } from 'react';\n\n// Component Level Types\nimport { MenuOptionProps } from '../0-types/MenuOptionProps';\n\nconst MenuOption: FC<MenuOptionProps> = ({\n  link,\n  name,\n  imgFront,\n  imgBack,\n  imgLabel,\n  ripScale,\n  labelScale,\n  ripPosition,\n  labelPosition,\n  frontRotation,\n  backRotation,\n  setOrbitSpeed,\n  toggleClick,\n  handleTransition,\n  clicked,\n}) => {\n  useEffect(() => {\n    Router.prefetch(`/baklavegan/${link}`);\n  }, [link]);\n\n  const [menuRipFront, menuRipBack, menuRipLabel] = useMemo(() => {\n    const loader = new TextureLoader();\n    return [loader.load(imgFront), loader.load(imgBack), loader.load(imgLabel)];\n  }, [imgFront, imgBack, imgLabel]);\n\n  const [scaleState, setScaleState] = useState(false);\n  const [pushed, setPushed] = useState(false);\n\n  const handlePointerDown = (e: any) => {\n    e.stopPropagation();\n    setPushed(true);\n  };\n\n  const handlePointerUp = (e: any) => {\n    setPushed(false);\n    handleTransition();\n    if (clicked) {\n      Router.push(`/baklavegan/${link}`);\n      setTimeout(() => {\n        toggleClick();\n      }, 100);\n    }\n  };\n\n  const { push }: any = useSpring({\n    config: {\n      friction: 15,\n    },\n    push: pushed ? [1, 1, 1] : [1.08, 1.08, 1.08],\n  });\n\n  const handleHover = (e: any, cursor: boolean) => {\n    e.stopPropagation();\n    setScaleState(!scaleState);\n    if (cursor) {\n      setOrbitSpeed(0);\n      document.body.style.cursor = 'pointer';\n    } else {\n      setOrbitSpeed(-1.6);\n      document.body.style.cursor = 'default';\n    }\n  };\n\n  const { scale }: any = useSpring({\n    config: {\n      friction: 15,\n    },\n    scale: scaleState ? [1.08, 1.08, 1.08] : [1, 1, 1],\n  });\n\n  return (\n    <a.group scale={scale}>\n      <a.group scale={push}>\n        <mesh position={ripPosition} rotation={backRotation} renderOrder={1}>\n          <planeBufferGeometry args={ripScale} />\n          <meshStandardMaterial transparent>\n            <primitive attach=\"map\" object={menuRipBack} />\n          </meshStandardMaterial>\n        </mesh>\n        <mesh\n          name={name}\n          position={ripPosition}\n          rotation={frontRotation}\n          renderOrder={2}\n        >\n          <planeBufferGeometry args={ripScale} />\n          <meshStandardMaterial transparent>\n            <primitive attach=\"map\" object={menuRipFront} />\n          </meshStandardMaterial>\n        </mesh>\n        <mesh\n          position={labelPosition}\n          rotation={frontRotation}\n          onPointerDown={(e) => handlePointerDown(e)}\n          onPointerUp={(e) => handlePointerUp(e)}\n          onPointerOver={(e) => handleHover(e, true)}\n          onPointerOut={(e) => handleHover(e, false)}\n          renderOrder={3}\n        >\n          <planeBufferGeometry args={labelScale} />\n          <meshStandardMaterial transparent>\n            <primitive attach=\"map\" object={menuRipLabel} />\n          </meshStandardMaterial>\n        </mesh>\n      </a.group>\n    </a.group>\n  );\n};\n\nexport default MenuOption;\n"]},"metadata":{},"sourceType":"module"}