{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Redux Toolkit\nimport { createSlice, createAction } from '@reduxjs/toolkit'; // Next Redux Wrapper\n\nimport { HYDRATE } from 'next-redux-wrapper'; // Redux Types\n\nconst hydrate = createAction(HYDRATE);\nconst WindowSize = createSlice({\n  name: 'WindowSize',\n  initialState: {\n    width: 0,\n    height: 0\n  },\n  reducers: {\n    setDimensions: (state, action) => {\n      const {\n        width,\n        height\n      } = action.payload;\n      state.width = width;\n      state.height = height;\n    }\n  },\n\n  extraReducers(builder) {\n    builder.addCase(hydrate, (state, action) => {\n      console.log('HYDRATE', state, action.payload);\n      return _objectSpread(_objectSpread({}, state), action.payload[WindowSize.name]);\n    });\n  }\n\n});\nexport const {\n  setDimensions\n} = WindowSize.actions;\nexport default WindowSize;","map":{"version":3,"sources":["/Users/marleykanui/Desktop/valentines/valentines-card/redux/slices/WindowSizeSlice.tsx"],"names":["createSlice","createAction","HYDRATE","hydrate","WindowSize","name","initialState","width","height","reducers","setDimensions","state","action","payload","extraReducers","builder","addCase","console","log","actions"],"mappings":";;;;;;AAAA;AACA,SAASA,WAAT,EAAqCC,YAArC,QAAyD,kBAAzD,C,CAEA;;AACA,SAASC,OAAT,QAAwB,oBAAxB,C,CAEA;;AASA,MAAMC,OAAO,GAAGF,YAAY,CAAWC,OAAX,CAA5B;AAEA,MAAME,UAAU,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAE,YADuB;AAE7BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAE;AAApB,GAFe;AAG7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmD;AAChE,YAAM;AAAEL,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAoBI,MAAM,CAACC,OAAjC;AACAF,MAAAA,KAAK,CAACJ,KAAN,GAAcA,KAAd;AACAI,MAAAA,KAAK,CAACH,MAAN,GAAeA,MAAf;AACD;AALO,GAHmB;;AAU7BM,EAAAA,aAAa,CAACC,OAAD,EAAU;AACrBA,IAAAA,OAAO,CAACC,OAAR,CAAgBb,OAAhB,EAAyB,CAACQ,KAAD,EAAQC,MAAR,KAAmB;AAC1CK,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,KAAvB,EAA8BC,MAAM,CAACC,OAArC;AACA,6CACKF,KADL,GAEKC,MAAM,CAACC,OAAP,CAAeT,UAAU,CAACC,IAA1B,CAFL;AAID,KAND;AAOD;;AAlB4B,CAAD,CAA9B;AAqBA,OAAO,MAAM;AAAEK,EAAAA;AAAF,IAAoBN,UAAU,CAACe,OAArC;AAEP,eAAef,UAAf","sourcesContent":["// Redux Toolkit\nimport { createSlice, PayloadAction, createAction } from '@reduxjs/toolkit';\n\n// Next Redux Wrapper\nimport { HYDRATE } from 'next-redux-wrapper';\n\n// Redux Types\nimport { AppState } from '../store';\n\n// Types\ninterface WindowSizeProps {\n  width: number;\n  height: number;\n}\n\nconst hydrate = createAction<AppState>(HYDRATE);\n\nconst WindowSize = createSlice({\n  name: 'WindowSize',\n  initialState: { width: 0, height: 0 } as WindowSizeProps,\n  reducers: {\n    setDimensions: (state, action: PayloadAction<WindowSizeProps>) => {\n      const { width, height } = action.payload;\n      state.width = width;\n      state.height = height;\n    },\n  },\n  extraReducers(builder) {\n    builder.addCase(hydrate, (state, action) => {\n      console.log('HYDRATE', state, action.payload);\n      return {\n        ...state,\n        ...action.payload[WindowSize.name],\n      };\n    });\n  },\n});\n\nexport const { setDimensions } = WindowSize.actions;\n\nexport default WindowSize;\n"]},"metadata":{},"sourceType":"module"}