{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marleykanui/Desktop/valentines/valentines-card/components/0-navigation/0-menu/3-objects/MenuOption.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// React\nimport { useState, useEffect, useMemo } from 'react'; // Next\n\nimport Router from 'next/router'; // Three\n\nimport { TextureLoader } from 'three'; // React Spring\n\nimport { useSpring, a } from 'react-spring/three'; // React Types\n\nvar MenuOption = function MenuOption(_ref) {\n  _s();\n\n  var link = _ref.link,\n      name = _ref.name,\n      imgFront = _ref.imgFront,\n      imgBack = _ref.imgBack,\n      imgLabel = _ref.imgLabel,\n      ripScale = _ref.ripScale,\n      labelScale = _ref.labelScale,\n      ripPosition = _ref.ripPosition,\n      labelPosition = _ref.labelPosition,\n      frontRotation = _ref.frontRotation,\n      backRotation = _ref.backRotation,\n      setOrbitSpeed = _ref.setOrbitSpeed,\n      toggleClick = _ref.toggleClick,\n      handleTransition = _ref.handleTransition,\n      clicked = _ref.clicked;\n  useEffect(function () {\n    Router.prefetch(\"/baklavegan/\".concat(link));\n  }, [link]);\n\n  var _useMemo = useMemo(function () {\n    var loader = new TextureLoader();\n    return [loader.load(imgFront), loader.load(imgBack), loader.load(imgLabel)];\n  }, [imgFront, imgBack, imgLabel]),\n      menuRipFront = _useMemo[0],\n      menuRipBack = _useMemo[1],\n      menuRipLabel = _useMemo[2];\n\n  var _useState = useState(false),\n      scaleState = _useState[0],\n      setScaleState = _useState[1];\n\n  var _useState2 = useState(false),\n      pushed = _useState2[0],\n      setPushed = _useState2[1];\n\n  var handlePointerDown = function handlePointerDown(e) {\n    e.stopPropagation();\n    setPushed(true);\n  };\n\n  var handlePointerUp = function handlePointerUp(e) {\n    setPushed(false);\n    handleTransition();\n\n    if (clicked) {\n      Router.push(\"/baklavegan/\".concat(link));\n      setTimeout(function () {\n        toggleClick();\n      }, 100);\n    }\n  };\n\n  var _useSpring = useSpring({\n    config: {\n      friction: 15\n    },\n    push: pushed ? [1, 1, 1] : [1.08, 1.08, 1.08]\n  }),\n      push = _useSpring.push;\n\n  var handleHover = function handleHover(e, cursor) {\n    e.stopPropagation();\n    setScaleState(!scaleState);\n\n    if (cursor) {\n      setOrbitSpeed(0);\n      document.body.style.cursor = 'pointer';\n    } else {\n      setOrbitSpeed(-1.6);\n      document.body.style.cursor = 'default';\n    }\n  };\n\n  var _useSpring2 = useSpring({\n    config: {\n      friction: 15\n    },\n    scale: scaleState ? [1.08, 1.08, 1.08] : [1, 1, 1]\n  }),\n      scale = _useSpring2.scale;\n\n  return /*#__PURE__*/_jsxDEV(a.group, {\n    scale: scale,\n    children: /*#__PURE__*/_jsxDEV(a.group, {\n      scale: push,\n      children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n        position: ripPosition,\n        rotation: backRotation,\n        renderOrder: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n          args: ripScale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          transparent: true,\n          children: /*#__PURE__*/_jsxDEV(\"primitive\", {\n            attach: \"map\",\n            object: menuRipBack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        name: name,\n        position: ripPosition,\n        rotation: frontRotation,\n        renderOrder: 2,\n        children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n          args: ripScale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          transparent: true,\n          children: /*#__PURE__*/_jsxDEV(\"primitive\", {\n            attach: \"map\",\n            object: menuRipFront\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        position: labelPosition,\n        rotation: frontRotation,\n        onPointerDown: function onPointerDown(e) {\n          return handlePointerDown(e);\n        },\n        onPointerUp: function onPointerUp(e) {\n          return handlePointerUp(e);\n        },\n        onPointerOver: function onPointerOver(e) {\n          return handleHover(e, true);\n        },\n        onPointerOut: function onPointerOut(e) {\n          return handleHover(e, false);\n        },\n        renderOrder: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n          args: labelScale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          transparent: true,\n          children: /*#__PURE__*/_jsxDEV(\"primitive\", {\n            attach: \"map\",\n            object: menuRipLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MenuOption, \"XJ2m3Sw2vFNtNuP7k/KfGJU6oUg=\", false, function () {\n  return [useSpring, useSpring];\n});\n\n_c = MenuOption;\nexport default MenuOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuOption\");","map":{"version":3,"sources":["/Users/marleykanui/Desktop/valentines/valentines-card/components/0-navigation/0-menu/3-objects/MenuOption.tsx"],"names":["useState","useEffect","useMemo","Router","TextureLoader","useSpring","a","MenuOption","link","name","imgFront","imgBack","imgLabel","ripScale","labelScale","ripPosition","labelPosition","frontRotation","backRotation","setOrbitSpeed","toggleClick","handleTransition","clicked","prefetch","loader","load","menuRipFront","menuRipBack","menuRipLabel","scaleState","setScaleState","pushed","setPushed","handlePointerDown","e","stopPropagation","handlePointerUp","push","setTimeout","config","friction","handleHover","cursor","document","body","style","scale"],"mappings":"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","sourcesContent":["// React\nimport { useState, useEffect, useMemo } from 'react';\n\n// Next\nimport Router from 'next/router';\n\n// Three\nimport { TextureLoader } from 'three';\n\n// React Spring\nimport { useSpring, a } from 'react-spring/three';\n\n// React Types\nimport { FC } from 'react';\n\n// Component Level Types\nimport { MenuOptionProps } from '../0-types/MenuOptionProps';\n\nconst MenuOption: FC<MenuOptionProps> = ({\n  link,\n  name,\n  imgFront,\n  imgBack,\n  imgLabel,\n  ripScale,\n  labelScale,\n  ripPosition,\n  labelPosition,\n  frontRotation,\n  backRotation,\n  setOrbitSpeed,\n  toggleClick,\n  handleTransition,\n  clicked,\n}) => {\n  useEffect(() => {\n    Router.prefetch(`/baklavegan/${link}`);\n  }, [link]);\n\n  const [menuRipFront, menuRipBack, menuRipLabel] = useMemo(() => {\n    const loader = new TextureLoader();\n    return [loader.load(imgFront), loader.load(imgBack), loader.load(imgLabel)];\n  }, [imgFront, imgBack, imgLabel]);\n\n  const [scaleState, setScaleState] = useState(false);\n  const [pushed, setPushed] = useState(false);\n\n  const handlePointerDown = (e: any) => {\n    e.stopPropagation();\n    setPushed(true);\n  };\n\n  const handlePointerUp = (e: any) => {\n    setPushed(false);\n    handleTransition();\n    if (clicked) {\n      Router.push(`/baklavegan/${link}`);\n      setTimeout(() => {\n        toggleClick();\n      }, 100);\n    }\n  };\n\n  const { push }: any = useSpring({\n    config: {\n      friction: 15,\n    },\n    push: pushed ? [1, 1, 1] : [1.08, 1.08, 1.08],\n  });\n\n  const handleHover = (e: any, cursor: boolean) => {\n    e.stopPropagation();\n    setScaleState(!scaleState);\n    if (cursor) {\n      setOrbitSpeed(0);\n      document.body.style.cursor = 'pointer';\n    } else {\n      setOrbitSpeed(-1.6);\n      document.body.style.cursor = 'default';\n    }\n  };\n\n  const { scale }: any = useSpring({\n    config: {\n      friction: 15,\n    },\n    scale: scaleState ? [1.08, 1.08, 1.08] : [1, 1, 1],\n  });\n\n  return (\n    <a.group scale={scale}>\n      <a.group scale={push}>\n        <mesh position={ripPosition} rotation={backRotation} renderOrder={1}>\n          <planeBufferGeometry args={ripScale} />\n          <meshStandardMaterial transparent>\n            <primitive attach=\"map\" object={menuRipBack} />\n          </meshStandardMaterial>\n        </mesh>\n        <mesh\n          name={name}\n          position={ripPosition}\n          rotation={frontRotation}\n          renderOrder={2}\n        >\n          <planeBufferGeometry args={ripScale} />\n          <meshStandardMaterial transparent>\n            <primitive attach=\"map\" object={menuRipFront} />\n          </meshStandardMaterial>\n        </mesh>\n        <mesh\n          position={labelPosition}\n          rotation={frontRotation}\n          onPointerDown={(e) => handlePointerDown(e)}\n          onPointerUp={(e) => handlePointerUp(e)}\n          onPointerOver={(e) => handleHover(e, true)}\n          onPointerOut={(e) => handleHover(e, false)}\n          renderOrder={3}\n        >\n          <planeBufferGeometry args={labelScale} />\n          <meshStandardMaterial transparent>\n            <primitive attach=\"map\" object={menuRipLabel} />\n          </meshStandardMaterial>\n        </mesh>\n      </a.group>\n    </a.group>\n  );\n};\n\nexport default MenuOption;\n"]},"metadata":{},"sourceType":"module"}