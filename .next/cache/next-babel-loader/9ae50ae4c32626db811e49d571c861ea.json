{"ast":null,"code":"var _s = $RefreshSig$();\n\n// React\nimport { useEffect } from 'react'; // Redux\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setDimensions } from '../../redux/slices/WindowSizeSlice'; // React Types\n\nvar ClientOnly = function ClientOnly(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      _useSelector$WindowSi = _useSelector.WindowSize,\n      width = _useSelector$WindowSi.width,\n      height = _useSelector$WindowSi.height;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(setDimensions({\n      width: window.innerWidth,\n      height: window.innerHeight\n    }));\n  }, []);\n\n  if (width === 0 || height === 0) {\n    return null;\n  }\n\n  return children;\n};\n\n_s(ClientOnly, \"RBSq6t9JErjUTpIWLb953Jx8aSM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ClientOnly;\nexport default ClientOnly;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientOnly\");","map":{"version":3,"sources":["/Users/marleykanui/Desktop/valentines/valentines-card/components/1-layout/ClientPass.tsx"],"names":["useEffect","useDispatch","useSelector","setDimensions","ClientOnly","children","state","WindowSize","width","height","dispatch","window","innerWidth","innerHeight"],"mappings":";;AAAA;AACA,SAASA,SAAT,QAA0B,OAA1B,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,oCAA9B,C,CAEA;;AAMA,IAAMC,UAAc,GAAG,SAAjBA,UAAiB,OAAuB;AAAA;;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;;AAAA,qBAGxCH,WAAW,CAAqB,UAACI,KAAD;AAAA,WAAWA,KAAX;AAAA,GAArB,CAH6B;AAAA,2CAE1CC,UAF0C;AAAA,MAE5BC,KAF4B,yBAE5BA,KAF4B;AAAA,MAErBC,MAFqB,yBAErBA,MAFqB;;AAI5C,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ,CACNP,aAAa,CAAC;AACZK,MAAAA,KAAK,EAAEG,MAAM,CAACC,UADF;AAEZH,MAAAA,MAAM,EAAEE,MAAM,CAACE;AAFH,KAAD,CADP,CAAR;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,MAAIL,KAAK,KAAK,CAAV,IAAeC,MAAM,KAAK,CAA9B,EAAiC;AAC/B,WAAO,IAAP;AACD;;AACD,SAAOJ,QAAP;AACD,CAnBD;;GAAMD,U;UAGAF,W,EACaD,W;;;KAJbG,U;AAqBN,eAAeA,UAAf","sourcesContent":["// React\nimport { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setDimensions } from '../../redux/slices/WindowSizeSlice';\n\n// React Types\nimport { FC } from 'react';\n\n// Redux Types\nimport { AppState } from '../../redux/store';\n\nconst ClientOnly: FC = ({ children }: any) => {\n  const {\n    WindowSize: { width, height },\n  } = useSelector<AppState, AppState>((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    );\n  }, []);\n\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  return children;\n};\n\nexport default ClientOnly;\n"]},"metadata":{},"sourceType":"module"}